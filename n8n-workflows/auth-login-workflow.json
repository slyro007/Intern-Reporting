{
  "name": "User Login",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "auth-login",
        "options": {}
      },
      "id": "webhook",
      "name": "Login Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [240, 300],
      "webhookId": "auth-login"
    },
    {
      "parameters": {
        "functionCode": "// Extract login data from webhook\nconst inputData = $input.first().json;\nconst { email, password } = inputData;\n\n// Validate required fields\nif (!email || !password) {\n  return [{\n    json: {\n      success: false,\n      error: 'Email and password are required'\n    }\n  }];\n}\n\n// Mock user database - Add your test users here\nconst mockUsers = [\n  {\n    id: 'user_001',\n    name: 'Srujan Jalagam',\n    email: 'srujan@wolfflogics.com',\n    password: 'password123',\n    role: 'intern'\n  },\n  {\n    id: 'user_002', \n    name: 'Admin User',\n    email: 'admin@wolfflogics.com',\n    password: 'admin123',\n    role: 'admin'\n  },\n  {\n    id: 'user_003',\n    name: 'Demo Intern', \n    email: 'demo@wolfflogics.com',\n    password: 'demo123',\n    role: 'intern'\n  }\n];\n\n// Find user by email\nconst user = mockUsers.find(u => u.email.toLowerCase() === email.toLowerCase());\n\nif (!user || user.password !== password) {\n  return [{\n    json: {\n      success: false,\n      error: 'Invalid email or password'\n    }\n  }];\n}\n\nconsole.log('User logged in:', user.email);\n\nreturn [{\n  json: {\n    success: true,\n    message: 'Login successful',\n    user: {\n      id: user.id,\n      name: user.name,\n      email: user.email,\n      role: user.role\n    }\n  }\n}];"
      },
      "id": "function",
      "name": "Validate Login",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [460, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}",
        "responseHeaders": {
          "entries": [
            {
              "name": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "name": "Access-Control-Allow-Methods", 
              "value": "POST, OPTIONS"
            },
            {
              "name": "Access-Control-Allow-Headers",
              "value": "Content-Type, Authorization"
            }
          ]
        }
      },
      "id": "response",
      "name": "Login Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [680, 300]
    }
  ],
  "connections": {
    "Login Webhook": {
      "main": [
        [
          {
            "node": "Validate Login",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validate Login": {
      "main": [
        [
          {
            "node": "Login Response",
            "type": "main", 
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {},
  "staticData": null
} 